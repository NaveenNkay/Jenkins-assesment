pipeline {
    agent any
    environment {
        GOOGLE_APPLICATION_CREDENTIALS = credentials('gcp-sa')
        GIT_TOKEN = credentials('git-token')
    }
    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/NaveenNkay/Jenkins-assesment.git', branch: 'main'
            }
        }
        stage('Terraform Init') {
            steps {
                script {
                    // Initialize Terraform and configure remote backend for state storage in GCS bucket
                    sh 'terraform init'
                }
            }
        }
        stage('Terraform Validate') {
            steps {
                script {
                    // Validate Terraform configuration of terraform config
                    sh 'terraform validate'
                }
            }
        }
        stage('Run Terratest') {
            steps {
                // Set GOPATH and run tests
                sh "mkdir -p go/src/github.com/NaveenNkay/Jenkins-assesment.git"
                sh "rsync -av --exclude='go' ./ go/src/github.com/NaveenNkay/Jenkins-assesment.git/"
                dir("go/src/github.com/NaveenNkay/Jenkins-assesment.git/test") {
                    sh "go mod init github.com/NaveenNkay/Jenkins-assesment.git/test"
                    sh "go get github.com/gruntwork-io/terratest/modules/terraform"
                    sh "go get github.com/stretchr/testify/assert"
                    sh "go test -v -timeout 30m || exit 1"
                }
            }
        }
        stage('Terraform State-list') {
            steps {
                script {
                    // Validate Terraform configuration of terraform config
                    sh 'terraform state list'
                }
            }
        }
    }
}
